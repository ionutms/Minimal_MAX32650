name: Generate KiCad Schematic PDFs
on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  generate-schematic-pdfs:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Verify project files
        id: verify-files
        run: |
          echo "Repository contents:"
          ls -la
          echo "Project directory contents:"
          ls -la minimal_max32650/ || echo "Directory not found"
          
          PROJECT_FILE=$(find . -name "*.kicad_pro" | grep -i "minimal_max32650" | head -n 1)
          SCHEMATIC_FILE=$(find . -name "*.kicad_sch" | grep -i "minimal_max32650" | head -n 1)
          
          if [ -z "$PROJECT_FILE" ]; then
            echo "❌ KiCad project file (.kicad_pro) not found!"
            echo "project_found=false" >> $GITHUB_OUTPUT
            exit 0
          else
            echo "✅ Found KiCad project file: $PROJECT_FILE"
            echo "project_file=$PROJECT_FILE" >> $GITHUB_OUTPUT
            echo "project_found=true" >> $GITHUB_OUTPUT
          fi
          
          if [ -z "$SCHEMATIC_FILE" ]; then
            echo "❌ KiCad schematic file (.kicad_sch) not found!"
            echo "schematic_found=false" >> $GITHUB_OUTPUT
          else
            echo "✅ Found KiCad schematic file: $SCHEMATIC_FILE"
            echo "schematic_file=$SCHEMATIC_FILE" >> $GITHUB_OUTPUT
            echo "schematic_found=true" >> $GITHUB_OUTPUT
            PROJECT_NAME=$(basename "$SCHEMATIC_FILE" .kicad_sch)
            echo "project_name=$PROJECT_NAME" >> $GITHUB_OUTPUT
          fi
  
      - name: Skip if project files not found
        if: steps.verify-files.outputs.project_found != 'true' || steps.verify-files.outputs.schematic_found != 'true'
        run: |
          echo "Required KiCad project files not found. Skipping schematic generation."
          exit 0

      - name: Create output directory with proper permissions
        if: steps.verify-files.outputs.schematic_found == 'true'
        run: |
          mkdir -p schematics
          chmod -R 777 ${{ github.workspace }}
      
      - name: Generate PDF schematic with all themes
        id: pdf-temp-dir
        if: steps.verify-files.outputs.schematic_found == 'true'
        continue-on-error: true
        run: |
          echo "Generating PDFs with different themes..."
          
          docker run --rm -u $(id -u):$(id -g) \
            -v ${{ github.workspace }}:/kicad_project \
            -e HOME=/tmp/home \
            kicad/kicad:9.0 \
            bash -c "mkdir -p /tmp/home/.config/kicad/9.0/colors && \
                     export HOME=/tmp/home && \
                     mkdir -p /tmp && \
                     echo 'Available themes:' && \
                     kicad-cli sch export pdf --help | grep -A 20 theme && \
                     echo 'Testing theme options...' && \
                     THEME_OPTIONS=('default' 'dark' 'light' 'user' 'bw') && \
                     mkdir -p /kicad_project/schematics && \
                     # Try to generate with 'default' (no theme specified)
                     echo \"Trying without theme option\" && \
                     kicad-cli sch export pdf \
                       --output '/tmp/schematic_default.pdf' \
                       '/kicad_project/${{ steps.verify-files.outputs.schematic_file }}' && \
                     cp /tmp/schematic_default.pdf '/kicad_project/schematics/${{ steps.verify-files.outputs.project_name }}_default.pdf' && \
                     # Try each themed version
                     for THEME in dark light user bw; do \
                       echo \"Trying theme: \$THEME\" && \
                       kicad-cli sch export pdf \
                         --output \"/tmp/schematic_\$THEME.pdf\" \
                         --theme \$THEME \
                         '/kicad_project/${{ steps.verify-files.outputs.schematic_file }}' && \
                       cp \"/tmp/schematic_\$THEME.pdf\" \"/kicad_project/schematics/${{ steps.verify-files.outputs.project_name }}_\$THEME.pdf\" || echo \"Failed with theme: \$THEME\"; \
                     done && \
                     # Also save the default version as the main schematic file
                     cp '/tmp/schematic_default.pdf' '/kicad_project/schematics/${{ steps.verify-files.outputs.project_name }}_schematic.pdf'"
          
          echo "Generated files:"
          ls -la schematics/
          
          if [ -f "schematics/${{ steps.verify-files.outputs.project_name }}_schematic.pdf" ]; then
            echo "✅ Default PDF schematic generated successfully"
            echo "success=true" >> $GITHUB_OUTPUT
          else
            echo "❌ Failed to generate default PDF schematic"
            echo "success=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Check for generated files
        run: |
          echo "Checking for generated schematic files..."
          ls -la schematics/ || echo "No schematics directory found"
          FILE_COUNT=$(find schematics -type f 2>/dev/null | wc -l)
          if [ "$FILE_COUNT" -gt 0 ]; then
            echo "✅ Generated $FILE_COUNT schematic file(s)"
          else
            echo "❌ No schematic files were generated"
            exit 1
          fi
      
      - name: Upload schematic outputs as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: schematic-outputs
          path: schematics/
          retention-days: 7
      
      - name: Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
      
      - name: Commit all schematic outputs to repository
        run: |
          git add schematics/
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Generate schematic PDFs with multiple themes"
            git push
          fi